{
  "hash": "c4a84265cc23e6e2d7f3869729261542",
  "result": {
    "markdown": "---\ntitle: \"Data Analysis in R\"\ninstitute: \"Department of Political Science at Georgia State University\"\nauthor: \"Josh Allen\"\ndate: \"2022-08-29\"\nformat: \n revealjs:\n   theme: [\"allen.scss\"]\n---\n\n\n\n\n\n## Packages You Will Need \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npacman::p_load(\"sandwich\", \"lmtest\", \"marginaleffects\", \"emmeans\", \"modelsummary\", \"broom\",\n               \"caret\", \"tidyverse\", \"fixest\", \"kableExtra\", \"nullabor\")\nset.seed(1994)\n\npenguins = palmerpenguins::penguins \n```\n:::\n\n\n- Note you will see some version of `theme_allen` used \n  - This is just set a set of modifications based on [Kyle Butt's](https://github.com/kylebutts/templates/tree/master/ggplot_theme) personal theme, mainly the fonts\n  - If you really like it I can include the underlying file in an email.\n\n\n:::{.notes}\nNote this workshop is not a workshop that will teach you how these methods work. I presume that most of you will be familiar with linear regression and maximumlikelihood estimation. If any of you are here with more of a machine learning background this includes logit and what not. \n\nI also assume you know the basics of indexing I will go through a bit of it but you should probably know that before doing data analysis \n:::\n\n\n\n\n\n\n\n# Exploratory Data Analysis in R \n\n\n\n\n\n## Describing Variables \n\n- This depends on what kind of variable it is i.e. continuous, categorical etc\n\n- It also depends on what story you need to tell\n  - Is this confounder a big deal?\n  - Do we see anticipation of treatment?\n  - Are there any outliers?\n  - etc?\n  \n- Remember R is just a toolbox. \n\n\n\n:::{.notes}\nExploratory data analysis is the first step of any data analysis pipeline. You need to understand your data in order to understand how to handle things. What does the distribution look like of your outcome variable. If you are like me and ended up taking a lot of causal inference classes and or read a lot of causal inference papers lots of the first parts of papers are just presenting EDA results to convince the reader that the assumptions are met. \n\nToday we will be asking what is the relationship between bill length and body mass\n\nhopefully that seems like a sensible research question. If not well the goal is just to show you how to generate descriptive statistics in R \n:::\n\n\n## First Cut\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(penguins) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      species          island    bill_length_mm  bill_depth_mm  \n Adelie   :152   Biscoe   :168   Min.   :32.10   Min.   :13.10  \n Chinstrap: 68   Dream    :124   1st Qu.:39.23   1st Qu.:15.60  \n Gentoo   :124   Torgersen: 52   Median :44.45   Median :17.30  \n                                 Mean   :43.92   Mean   :17.15  \n                                 3rd Qu.:48.50   3rd Qu.:18.70  \n                                 Max.   :59.60   Max.   :21.50  \n                                 NA's   :2       NA's   :2      \n flipper_length_mm  body_mass_g       sex           year     \n Min.   :172.0     Min.   :2700   female:165   Min.   :2007  \n 1st Qu.:190.0     1st Qu.:3550   male  :168   1st Qu.:2007  \n Median :197.0     Median :4050   NA's  : 11   Median :2008  \n Mean   :200.9     Mean   :4202                Mean   :2008  \n 3rd Qu.:213.0     3rd Qu.:4750                3rd Qu.:2009  \n Max.   :231.0     Max.   :6300                Max.   :2009  \n NA's   :2         NA's   :2                                 \n```\n:::\n:::\n\n\n\n\n\n:::{.notes}\nIf we just want like the quickest and dirtiest look at all the variables in our data we can use summary. Functionally this works because palmerpenguins is a small toy dataset. Thankfully for me we can access the raw data that the penguins dataset is based on. This is just the penguins raw function in the palmer penguins packagte. \n:::\n\n\n\n## Summary with a bigger data frame \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins_bigger = palmerpenguins::penguins_raw\n\nsummary(penguins_bigger)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  studyName         Sample Number      Species             Region         \n Length:344         Min.   :  1.00   Length:344         Length:344        \n Class :character   1st Qu.: 29.00   Class :character   Class :character  \n Mode  :character   Median : 58.00   Mode  :character   Mode  :character  \n                    Mean   : 63.15                                        \n                    3rd Qu.: 95.25                                        \n                    Max.   :152.00                                        \n                                                                          \n    Island             Stage           Individual ID      Clutch Completion \n Length:344         Length:344         Length:344         Length:344        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n    Date Egg          Culmen Length (mm) Culmen Depth (mm) Flipper Length (mm)\n Min.   :2007-11-09   Min.   :32.10      Min.   :13.10     Min.   :172.0      \n 1st Qu.:2007-11-28   1st Qu.:39.23      1st Qu.:15.60     1st Qu.:190.0      \n Median :2008-11-09   Median :44.45      Median :17.30     Median :197.0      \n Mean   :2008-11-27   Mean   :43.92      Mean   :17.15     Mean   :200.9      \n 3rd Qu.:2009-11-16   3rd Qu.:48.50      3rd Qu.:18.70     3rd Qu.:213.0      \n Max.   :2009-12-01   Max.   :59.60      Max.   :21.50     Max.   :231.0      \n                      NA's   :2          NA's   :2         NA's   :2          \n Body Mass (g)      Sex            Delta 15 N (o/oo) Delta 13 C (o/oo)\n Min.   :2700   Length:344         Min.   : 7.632    Min.   :-27.02   \n 1st Qu.:3550   Class :character   1st Qu.: 8.300    1st Qu.:-26.32   \n Median :4050   Mode  :character   Median : 8.652    Median :-25.83   \n Mean   :4202                      Mean   : 8.733    Mean   :-25.69   \n 3rd Qu.:4750                      3rd Qu.: 9.172    3rd Qu.:-25.06   \n Max.   :6300                      Max.   :10.025    Max.   :-23.79   \n NA's   :2                         NA's   :14        NA's   :13       \n   Comments        \n Length:344        \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n```\n:::\n:::\n\n\n:::{.notes}\nAs you can see you can that if you like a somewhat big data frame it can get a little unruly quickly because it is going to spit out a description for every column in your data set. If you want a single variable than you can just the dollar sign to index by name. We can also get each measure we want individually  \n:::\n\n\n\n## Getting Some Descriptive Statistics \n### The Mean\n:::columns\n:::column\n### Base \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmean(penguins$bill_depth_mm, na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 17.15117\n```\n:::\n:::\n\n\n:::\n\n:::column\n### Tidyverse\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummarise(penguins,\n          avg_body_mass = mean(body_mass_g,\n                                 na.rm = TRUE))\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| avg_body_mass|\n|-------------:|\n|      4201.754|\n\n</div>\n:::\n:::\n\n\n:::\n:::\n\n\n\n\n## Quartiles\n\n:::columns \n:::column\n### Base \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nquantile(penguins$bill_depth_mm,\n         na.rm = TRUE,\n         probs = c(.25, .50, .75))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n 25%  50%  75% \n15.6 17.3 18.7 \n```\n:::\n:::\n\n\n:::\n\n:::column\n### Tidyverse\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins |> \n  summarise(quartile_length = quantile(bill_length_mm,\n                                    na.rm = TRUE,\n                                    probs = c(.25,\n                                              .50,\n                                              .75)))\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n| quartile_length|\n|---------------:|\n|          39.225|\n|          44.450|\n|          48.500|\n\n</div>\n:::\n:::\n\n\n\n:::\n:::\n\n\n\n## T-tests\n\n::::{.columns}\n:::{.column width=\"45%\"}\n### Base R \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins_t_test = na.omit(penguins) \n\npenguins_t_test$gentoo = ifelse(penguins_t_test$species == \"Gentoo\", TRUE, FALSE)\n\nt.test(flipper_length_mm ~ gentoo, data = penguins_t_test) \n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  flipper_length_mm by gentoo\nt = -32.47, df = 263.2, p-value < 2.2e-16\nalternative hypothesis: true difference in means between group FALSE and group TRUE is not equal to 0\n95 percent confidence interval:\n -26.84983 -23.77964\nsample estimates:\nmean in group FALSE  mean in group TRUE \n           191.9206            217.2353 \n```\n:::\n:::\n\n\n:::\n\n:::{.column width=\"45%\"}\n\n### Tidyverse \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins_t_test = penguins |> \n  drop_na() |> \n  mutate(gentoo = ifelse(species == \"Gentoo\",\n                         TRUE,\n                         FALSE))\n\n\n\nt.test(flipper_length_mm ~ gentoo, data = penguins_t_test) \n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  flipper_length_mm by gentoo\nt = -32.47, df = 263.2, p-value < 2.2e-16\nalternative hypothesis: true difference in means between group FALSE and group TRUE is not equal to 0\n95 percent confidence interval:\n -26.84983 -23.77964\nsample estimates:\nmean in group FALSE  mean in group TRUE \n           191.9206            217.2353 \n```\n:::\n:::\n\n\n\n:::\n::::\n\n\n\n\n## Correlations \n:::columns\n:::column\n### Base \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins_df = penguins[,c(3:6)]  |> ## lets you do it by column position\n  na.omit() \n\ncor(penguins_df)\n\n## this lets you do it by class\n penguins[, sapply(penguins, is.numeric)]  |> \n  na.omit() |>\n   cor()\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> bill_length_mm </th>\n   <th style=\"text-align:right;\"> bill_depth_mm </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> bill_length_mm </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n   <td style=\"text-align:right;\"> -0.2350529 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> bill_depth_mm </td>\n   <td style=\"text-align:right;\"> -0.2350529 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n:::\n\n:::column\n### Tidyverse \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins_df = penguins |> \n  drop_na() |> \n  select(where(is.numeric), -year, - body_mass_g) #### Just cutting out year for presentation \n\ncor(penguins_df)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> bill_length_mm </th>\n   <th style=\"text-align:right;\"> bill_depth_mm </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> bill_length_mm </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n   <td style=\"text-align:right;\"> -0.2286256 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> bill_depth_mm </td>\n   <td style=\"text-align:right;\"> -0.2286256 </td>\n   <td style=\"text-align:right;\"> 1.0000000 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n:::\n\n\n\n## It is Also Important to plot your data! \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/dino-plot-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::{.notes}\nRemember numbers hide lots of things from our ggplot workshop I showed this figure. These all have roughly the same mean and standard deviation \n:::\n\n\n\n## Some Basic Graphs \n\n:::columns\n::: column\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_length_mm ,\n                     y = body_mass_g,\n                     color = species,\n                     group = species)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(x = \"Bill Length(milimeters)\",\n       y = \"Body mass(grams)\") +\n  guides(color = guide_legend(title = \"Species\",\n                              override.aes = list(fill = NA))) +\n  theme_allen_bw()\n```\n:::\n\n:::\n\n\n:::column \n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/unnamed-chunk-15-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n:::\n\n\n\n## Some Basic Graphs Cont\n\n:::columns\n::: column\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = bill_depth_mm, y = body_mass_g)) +\n  geom_point(aes(color = species)) +\n  geom_smooth(aes(color = species), method = \"lm\") +\n  geom_smooth(method = \"lm\") + \n  labs(x = \"Bill Length(milimeters)\", y = \"Body mass(grams)\") +\n  guides(color = guide_legend(title = \"Species\",\n                              override.aes = list(fill = NA))) +\n  theme_allen_bw()\n```\n:::\n\n:::\n\n:::column\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/bill-depth-out-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n\n\n## Distributions \n\n:::columns \n:::column \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = flipper_length_mm, fill = species)) +\n  geom_histogram(alpha = 0.6) +\n  labs(x = \"Flipper Length(milimeters)\") +\n  guides(fill = guide_legend(title = \"Species\")) +\n  theme_allen_minimal()\n```\n:::\n\n:::\n\n:::column\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/flipper-hist-out-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n:::\n\n\n\n\n## Distributions(cont)\n\n:::columns \n:::column\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n## you can turn off scientific notion using option(scipen = 999)\n\nggplot(penguins, aes(x = body_mass_g, fill = species)) +\n  geom_density(alpha = 0.7) +\n  labs(x = \"Body Mass(grams)\") +\n  guides(fill = guide_legend(title = \"Species\")) +\n  theme_allen_minimal()\n```\n:::\n\n\n:::\n\n:::column\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/body-mas-density-out-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n:::\n\n\n\n\n## User Written Extensions\n\n\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(gghalves)\n\nggplot(penguins, aes(x = species, y = bill_depth_mm, fill = species)) +\n  geom_boxplot(\n    width = .2, fill = \"white\",\n    size = 1.5, outlier.shape = NA\n  ) +\n  ggdist::stat_halfeye(\n    adjust = .33,\n    width = .67, \n    color = NA,\n    position = position_nudge(x = .15)\n  ) +\n  gghalves::geom_half_point(\n    side = \"l\", \n    range_scale = .3, \n    alpha = .25, size = 1\n  ) +\n  MetBrewer::scale_fill_met_d(name = \"Veronese\") +\n  labs(x = NULL, fill = \"Species\", y = \"Bill Depth(milimeters)\") +\n  coord_flip() +\n  theme_allen_bw()\n```\n:::\n\n\n:::\n\n::: {.column width=\"65%\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/unnamed-chunk-16-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n::::\n\n:::{.aside}\nCode and example are from Cédric Scherer's [Beyond the Bar plot talk](https://twitter.com/CedScherer/status/1438836874630545412)\n:::\n\n\n## Generating Table 1\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins = as.data.frame(penguins)\n\n\ndatasummary(All(penguins) ~ Mean + SD + Max + Min + Median + Histogram,\n            data = penguins, output = \"html\",\n            title = \"Descriptive Statistics\") \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Descriptive Statistics</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> Mean </th>\n   <th style=\"text-align:right;\"> SD </th>\n   <th style=\"text-align:right;\"> Max </th>\n   <th style=\"text-align:right;\"> Min </th>\n   <th style=\"text-align:right;\"> Median </th>\n   <th style=\"text-align:right;\"> Histogram </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> bill_length_mm </td>\n   <td style=\"text-align:right;\"> 43.92 </td>\n   <td style=\"text-align:right;\"> 5.46 </td>\n   <td style=\"text-align:right;\"> 59.60 </td>\n   <td style=\"text-align:right;\"> 32.10 </td>\n   <td style=\"text-align:right;\"> 44.45 </td>\n   <td style=\"text-align:right;\"> ▁▅▆▆▆▇▇▂▁ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> bill_depth_mm </td>\n   <td style=\"text-align:right;\"> 17.15 </td>\n   <td style=\"text-align:right;\"> 1.97 </td>\n   <td style=\"text-align:right;\"> 21.50 </td>\n   <td style=\"text-align:right;\"> 13.10 </td>\n   <td style=\"text-align:right;\"> 17.30 </td>\n   <td style=\"text-align:right;\"> ▃▄▄▄▇▆▇▅▂▁ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> flipper_length_mm </td>\n   <td style=\"text-align:right;\"> 200.92 </td>\n   <td style=\"text-align:right;\"> 14.06 </td>\n   <td style=\"text-align:right;\"> 231 </td>\n   <td style=\"text-align:right;\"> 172 </td>\n   <td style=\"text-align:right;\"> 197.00 </td>\n   <td style=\"text-align:right;\"> ▂▅▇▄▁▄▄▂▁ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> body_mass_g </td>\n   <td style=\"text-align:right;\"> 4201.75 </td>\n   <td style=\"text-align:right;\"> 801.95 </td>\n   <td style=\"text-align:right;\"> 6300 </td>\n   <td style=\"text-align:right;\"> 2700 </td>\n   <td style=\"text-align:right;\"> 4050.00 </td>\n   <td style=\"text-align:right;\"> ▁▄▇▅▄▄▃▃▂▁ </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> year </td>\n   <td style=\"text-align:right;\"> 2008.03 </td>\n   <td style=\"text-align:right;\"> 0.82 </td>\n   <td style=\"text-align:right;\"> 2009 </td>\n   <td style=\"text-align:right;\"> 2007 </td>\n   <td style=\"text-align:right;\"> 2008.00 </td>\n   <td style=\"text-align:right;\"> ▆▇▇ </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n\n\n\n\n## Generating a Balance Table \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndatasummary_balance(~gentoo,\n                    data = penguins_t_test)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n<tr>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"2\"></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">FALSE (N=214)</div></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">TRUE (N=119)</div></th>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"2\"></th>\n</tr>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:left;\">    </th>\n   <th style=\"text-align:right;\"> Mean </th>\n   <th style=\"text-align:right;\"> Std. Dev. </th>\n   <th style=\"text-align:right;\"> Mean </th>\n   <th style=\"text-align:right;\"> Std. Dev. </th>\n   <th style=\"text-align:right;\"> Diff. in Means </th>\n   <th style=\"text-align:right;\"> Std. Error </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> bill_length_mm </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 42.0 </td>\n   <td style=\"text-align:right;\"> 5.5 </td>\n   <td style=\"text-align:right;\"> 47.6 </td>\n   <td style=\"text-align:right;\"> 3.1 </td>\n   <td style=\"text-align:right;\"> 5.6 </td>\n   <td style=\"text-align:right;\"> 0.5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> bill_depth_mm </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 18.4 </td>\n   <td style=\"text-align:right;\"> 1.2 </td>\n   <td style=\"text-align:right;\"> 15.0 </td>\n   <td style=\"text-align:right;\"> 1.0 </td>\n   <td style=\"text-align:right;\"> -3.4 </td>\n   <td style=\"text-align:right;\"> 0.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> flipper_length_mm </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 191.9 </td>\n   <td style=\"text-align:right;\"> 7.2 </td>\n   <td style=\"text-align:right;\"> 217.2 </td>\n   <td style=\"text-align:right;\"> 6.6 </td>\n   <td style=\"text-align:right;\"> 25.3 </td>\n   <td style=\"text-align:right;\"> 0.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> body_mass_g </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> 3714.7 </td>\n   <td style=\"text-align:right;\"> 435.7 </td>\n   <td style=\"text-align:right;\"> 5092.4 </td>\n   <td style=\"text-align:right;\"> 501.5 </td>\n   <td style=\"text-align:right;\"> 1377.7 </td>\n   <td style=\"text-align:right;\"> 54.8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;box-shadow: 0px 1px\"> year </td>\n   <td style=\"text-align:left;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:right;box-shadow: 0px 1px\"> 2008.0 </td>\n   <td style=\"text-align:right;box-shadow: 0px 1px\"> 0.8 </td>\n   <td style=\"text-align:right;box-shadow: 0px 1px\"> 2008.1 </td>\n   <td style=\"text-align:right;box-shadow: 0px 1px\"> 0.8 </td>\n   <td style=\"text-align:right;box-shadow: 0px 1px\"> 0.0 </td>\n   <td style=\"text-align:right;box-shadow: 0px 1px\"> 0.1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:right;\"> N </td>\n   <td style=\"text-align:right;\"> Pct. </td>\n   <td style=\"text-align:right;\"> N </td>\n   <td style=\"text-align:right;\"> Pct. </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> species </td>\n   <td style=\"text-align:left;\"> Adelie </td>\n   <td style=\"text-align:right;\"> 146 </td>\n   <td style=\"text-align:right;\"> 68.2 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.0 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> Chinstrap </td>\n   <td style=\"text-align:right;\"> 68 </td>\n   <td style=\"text-align:right;\"> 31.8 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.0 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> Gentoo </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.0 </td>\n   <td style=\"text-align:right;\"> 119 </td>\n   <td style=\"text-align:right;\"> 100.0 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> island </td>\n   <td style=\"text-align:left;\"> Biscoe </td>\n   <td style=\"text-align:right;\"> 44 </td>\n   <td style=\"text-align:right;\"> 20.6 </td>\n   <td style=\"text-align:right;\"> 119 </td>\n   <td style=\"text-align:right;\"> 100.0 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> Dream </td>\n   <td style=\"text-align:right;\"> 123 </td>\n   <td style=\"text-align:right;\"> 57.5 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.0 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> Torgersen </td>\n   <td style=\"text-align:right;\"> 47 </td>\n   <td style=\"text-align:right;\"> 22.0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0.0 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> sex </td>\n   <td style=\"text-align:left;\"> female </td>\n   <td style=\"text-align:right;\"> 107 </td>\n   <td style=\"text-align:right;\"> 50.0 </td>\n   <td style=\"text-align:right;\"> 58 </td>\n   <td style=\"text-align:right;\"> 48.7 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> male </td>\n   <td style=\"text-align:right;\"> 107 </td>\n   <td style=\"text-align:right;\"> 50.0 </td>\n   <td style=\"text-align:right;\"> 61 </td>\n   <td style=\"text-align:right;\"> 51.3 </td>\n   <td style=\"text-align:right;\">  </td>\n   <td style=\"text-align:right;\">  </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n## Linear Regression in R \n\n\n\n\n\n## Some Basics\n\n- For `lm` and other models we use this general form\n\n```\nmodel_one = estimator(outcome ~ iv1 + iv2 + ..., data = df)\n\n```\n\n- If you want to include all the variables in your data set than you can do that with `.`\n\n```\nmodel_one = estimator(outcome ~ ., data = df)\n\n```\n\n- Remember R can hold lots of datasets so we have to be explicit with where the data is coming from\n  - note that we have several different datasets named `penguins_blah`\n  - making sure you have kept track of the using dataset is important\n\n\n\n\n\n\n\n\n## Univariate Regression \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npeng_naive = lm(body_mass_g ~ bill_length_mm, data = penguins)\n\npeng_naive\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ bill_length_mm, data = penguins)\n\nCoefficients:\n   (Intercept)  bill_length_mm  \n        362.31           87.42  \n```\n:::\n:::\n\n\n:::{.notes}\nnotice that the output is fairly sparse but in the environment you have a list object in the environment. R creates these as lists because there are tons of things of various classes. So to grab them you can use broom or you can index them.\n:::\n\n\n\n\n\n## \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npeng_naive = lm(body_mass_g ~ bill_length_mm, data = penguins)\n\nsummary(peng_naive)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ bill_length_mm, data = penguins)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1762.08  -446.98    32.59   462.31  1636.86 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)     362.307    283.345   1.279    0.202    \nbill_length_mm   87.415      6.402  13.654   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 645.4 on 340 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.3542,\tAdjusted R-squared:  0.3523 \nF-statistic: 186.4 on 1 and 340 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n:::{.notes}\nThis is probably what you are used to seeing if you are coming over from another language \n:::\n\n\n\n\n## Multiple Regression \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npeng_adjust = lm(body_mass_g ~  bill_length_mm + flipper_length_mm + species, data = penguins)\n\nsummary(peng_adjust)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ bill_length_mm + flipper_length_mm + \n    species, data = penguins)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-808.83 -230.35  -26.16  223.18 1050.37 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       -3904.387    529.257  -7.377 1.27e-12 ***\nbill_length_mm       61.736      7.126   8.664  < 2e-16 ***\nflipper_length_mm    27.429      3.176   8.638 2.34e-16 ***\nspeciesChinstrap   -748.562     81.534  -9.181  < 2e-16 ***\nspeciesGentoo        90.435     88.647   1.020    0.308    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 340.1 on 337 degrees of freedom\n  (2 observations deleted due to missingness)\nMultiple R-squared:  0.8222,\tAdjusted R-squared:  0.8201 \nF-statistic: 389.7 on 4 and 337 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n\n\n\n\n\n\n## Getting Diagnostic Statistics \n\n:::columns\n:::column\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n\n### Base R\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npeng_adjust = lm(body_mass_g ~  bill_length_mm + flipper_length_mm + species,\n                 data = peng_sans_miss_base)\n## remember you need to open the train car door or it will return a listy thing\npeng_sans_miss_base$.fitted_vals_brack = peng_adjust[[5]] \n\npeng_sans_miss_base$.fitted_vals_dollar = peng_adjust$fitted.values\n\npeng_sans_miss_base$.predicted_vals = predict(peng_adjust, interval = \"prediction\")\n\npeng_sans_miss_base$.residuals_vals = peng_adjust$residuals\n\npeng_sans_miss_base$.studentized_resids = rstudent(peng_adjust)\n\npeng_sans_miss_base$.cooks_distance = cooks.distance(peng_adjust)\n```\n:::\n\n:::\n\n:::column\n### Tidyverse \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npeng_adjust = lm(body_mass_g ~  bill_length_mm + flipper_length_mm + species,\n                 data = peng_sans_miss_tidy) \npeng_diag_tidy = augment(peng_adjust,\n                         data = peng_sans_miss_tidy)\n```\n:::\n\n\n\n:::\n:::\n\n\n:::{.aside}\nI just dropped the missing values to make my life easier\n:::\n\n:::{.notes}\nAs good data analysts we should always check that our assumptions are met. One really good test is to just plot our fitted values against our residuals. So lets go ahead and grab them. In base you just index them via the dollar sign or brackets. In the tidyverse can get them via broom augment. They will be returned with the name of the thing you want starting with a dot. \n\nThe reason is that the team behind broom did not want to override existing stuff\n:::\n\n\n## Plotting \n\n:::columns \n:::column\n### Base \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot(peng_sans_miss_base$.fitted_vals_dollar,\n     peng_sans_miss_base$.residuals_vals,\n     col = peng_sans_miss_base$species)\nabline(lm(peng_sans_miss_base$.residuals_vals ~ peng_sans_miss_base$.fitted_vals_dollar))\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-25-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n\n:::column\n### Tidyverse \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(peng_diag_tidy, aes(x = .fitted,\n                           y = .resid)) +\n  geom_point(aes(color = species)) +\n  geom_smooth(method = \"lm\") +\n  theme_allen_bw()\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-26-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n:::\n\n\n\n\n## Checking for Normality \n\n:::columns\n:::column\n### Base\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhist(peng_sans_miss_base$.residuals_vals)\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-27-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n\n:::column\n### Tidyverse \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(peng_diag_tidy, aes(x = .resid)) +\n  geom_histogram(binwidth = 100) +\n  theme_allen_bw()\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-28-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n:::\n\n## Base R diagnostic plots \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npar(mfrow = c(2, 2))\nplot(peng_adjust)\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-29-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n## User Extensions \n\n:::columns\n:::column\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(1994)  ## Shuffle these the same way every time\n\nshuffled_residuals = lineup(null_lm(body_mass_g ~ bill_length_mm + flipper_length_mm + species,\n                                     method = \"rotate\"),\n                             true = peng_diag_tidy,\n                             n = 9)\n#### decrypt(\"CLg7 X161 sO bJws6sJO vv\")\n\nggplot(shuffled_residuals, aes(x = .fitted, y = .resid)) +\n  geom_point() +\n  facet_wrap(vars(.sample))\n```\n:::\n\n:::\n\n:::column\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/unnamed-chunk-31-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n:::\n\n:::{.notes}\nThis is kind of a cool way to see if you can find your residuals in the plot. If one sticks out that is a bad sign that you havent dealt with some issues \n:::\n\n\n\n## Tests \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndecrypt(\"CLg7 X161 sO bJws6sJO vv\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"True data in position  1\"\n```\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbptest(peng_adjust)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n   <th style=\"text-align:right;\"> parameter </th>\n   <th style=\"text-align:left;\"> method </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 3.678191 </td>\n   <td style=\"text-align:right;\"> 0.4513059 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:left;\"> studentized Breusch-Pagan test </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbgtest(peng_adjust)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n   <th style=\"text-align:right;\"> parameter </th>\n   <th style=\"text-align:left;\"> method </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 8.776406 </td>\n   <td style=\"text-align:right;\"> 0.0030515 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> Breusch-Godfrey test for serial correlation of order up to 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::{.notes}\nnull for Breusch Pagan there is no hetrosckedasticity \n\nfail to reject \n\nNull for Breusch Godfrey is there is no serial correlation of order up to 1\n\nOkay it looks like something we have violated some of our assumptions \n:::\n\n\n## Fixing Our Standard Errors\n\n- We can do this \"on the fly\" in R \n\n- There are ways to do this in the model formula with various packages \n  - But it is better to do this [\"on the fly\"](https://grantmcdermott.com/better-way-adjust-SEs/)\n\n\n\n\n\n## Adjusting Our Standard Errors for Real This time \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncoeftest(peng_adjust, vcov= vcovHC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nt test of coefficients:\n\n                    Estimate Std. Error t value  Pr(>|t|)    \n(Intercept)       -3864.0732   507.3100 -7.6168 2.807e-13 ***\nbill_length_mm       60.1173     6.5195  9.2212 < 2.2e-16 ***\nflipper_length_mm    27.5443     3.0951  8.8993 < 2.2e-16 ***\nspeciesChinstrap   -732.4167    76.3112 -9.5978 < 2.2e-16 ***\nspeciesGentoo       113.2542    89.2584  1.2688    0.2054    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n:::{.notes}\n\nUsing sandwhich we can adjust our standard errors like this \n:::\n\n\n## A Whole Host of Standard Errors \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvc <- list(\n  \"Standard\"              = vcov(peng_adjust),\n  \"Sandwich (basic)\"      = sandwich(peng_adjust),\n  \"Clustered\"             = vcovCL(peng_adjust, cluster = ~ species),\n  \"Clustered (two-way)\"   = vcovCL(peng_adjust, cluster = ~ species + year),\n  \"HC3\"                   = vcovHC(peng_adjust),\n  \"Andrews' kernel HAC\"   = kernHAC(peng_adjust),\n  \"Newey-West\"            = NeweyWest(peng_adjust),\n  \"Bootstrap\"             = vcovBS(peng_adjust),\n  \"Bootstrap (clustered)\" = vcovBS(peng_adjust, cluster = ~ species)\n)\n\nadjusted_models = lapply(vc, function(x) coeftest(peng_adjust, vcov = x))\n```\n:::\n\n\n\n:::{.notes}\nWe can feed a huge list of standard errors fairly quickly it this took virtually no time. Instead of going back and adjusting a huge set of models as would be the case in other softwares where you specify standard error fixes in the model here you can simply specify it once and forget it.\n\n:::\n\n## What does it look like\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/unnamed-chunk-39-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n\n## Making Table 2 \n\n- Model Summary is my favorite table making package\n  - if you run `modelsummary::supported_models()` you will see it fits most needs\n  - alternatively if you don't want to read the list and fit your model than do `modelsummary::get_estimates(model_I_fitted)` it will tell if the output is supported\n\n- Supports a variety of formats including word\n  \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nse_info = tibble(term = \"Standard errors\",\"iid\", \"robust\", \"bootstrap\", \"stata\", \"clustered by sex\")\nmodelsummary(peng_adjust,\n             stars = TRUE,\n             coef_omit = \"(Intercept)|flipper_length_mm|.*species\",\n             add_rows = se_info,\n             vcov =  list(\"iid\", \"robust\", \"bootstrap\", \"stata\", cluster = ~ sex ),\n             gof_map = c(\"nobs\", \"r.squared\"))\n```\n:::\n\n\n- As you can see it also lets you adjust your standard errors \n  - You can supply it one kind of standard error\n  - Or a List like I did\n\n\n\n\n\n\n\n\n## The Results \n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table style=\"NAborder-bottom: 0; width: auto !important; margin-left: auto; margin-right: auto;\" class=\"table\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\"> Model 1 </th>\n   <th style=\"text-align:center;\"> Model 2 </th>\n   <th style=\"text-align:center;\"> Model 3 </th>\n   <th style=\"text-align:center;\"> Model 4 </th>\n   <th style=\"text-align:center;\"> Model 5 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> bill_length_mm </td>\n   <td style=\"text-align:center;\"> 60.117*** </td>\n   <td style=\"text-align:center;\"> 60.117*** </td>\n   <td style=\"text-align:center;\"> 60.117*** </td>\n   <td style=\"text-align:center;\"> 60.117*** </td>\n   <td style=\"text-align:center;\"> 60.117*** </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;box-shadow: 0px 1px\">  </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (7.207) </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (6.519) </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (6.158) </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (6.429) </td>\n   <td style=\"text-align:center;box-shadow: 0px 1px\"> (1.591) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Num.Obs. </td>\n   <td style=\"text-align:center;\"> 333 </td>\n   <td style=\"text-align:center;\"> 333 </td>\n   <td style=\"text-align:center;\"> 333 </td>\n   <td style=\"text-align:center;\"> 333 </td>\n   <td style=\"text-align:center;\"> 333 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> R2 </td>\n   <td style=\"text-align:center;\"> 0.824 </td>\n   <td style=\"text-align:center;\"> 0.824 </td>\n   <td style=\"text-align:center;\"> 0.824 </td>\n   <td style=\"text-align:center;\"> 0.824 </td>\n   <td style=\"text-align:center;\"> 0.824 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Standard errors </td>\n   <td style=\"text-align:center;\"> iid </td>\n   <td style=\"text-align:center;\"> robust </td>\n   <td style=\"text-align:center;\"> bootstrap </td>\n   <td style=\"text-align:center;\"> stata </td>\n   <td style=\"text-align:center;\"> clustered by sex </td>\n  </tr>\n</tbody>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001</td></tr></tfoot>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n\n\n## Interactions \n\n- To include a multiplicative term we can use `*`, `:` or `/` \n\n- The constitutive terms will appear automatically \n\n- In the case of `/` it returns the marginal effect \n  - As well as the correct standard errors and pvalues \n\n:::{.notes}\nThe nice part about R is that you can include interactions in a few different ways. One thing is that R will include the constuitive terms for you. The slash will sort of trick R into including the full marginal effects for you. \n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npengs_interact_stand = lm(body_mass_g ~ bill_length_mm * sex + species + flipper_length_mm,\n                           data = peng_sans_miss_tidy)\n\nsummary(pengs_interact_stand)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ bill_length_mm * sex + species + flipper_length_mm, \n    data = peng_sans_miss_tidy)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-722.25 -189.89   -5.58  188.97  897.79 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)            -1279.184    601.073  -2.128 0.034073 *  \nbill_length_mm            28.695      7.980   3.596 0.000374 ***\nsexmale                 1004.946    279.166   3.600 0.000368 ***\nspeciesChinstrap        -302.268     81.331  -3.716 0.000238 ***\nspeciesGentoo            670.469     95.795   6.999 1.47e-11 ***\nflipper_length_mm         19.052      2.954   6.449 4.06e-10 ***\nbill_length_mm:sexmale   -12.525      6.403  -1.956 0.051324 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 290.7 on 326 degrees of freedom\nMultiple R-squared:  0.872,\tAdjusted R-squared:  0.8697 \nF-statistic: 370.2 on 6 and 326 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n\n\n\n\n## Full Marginal Effects way \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npengs_interact_marg = lm(body_mass_g ~ bill_length_mm / sex + flipper_length_mm + species, data = peng_sans_miss_tidy)\n\nsummary(pengs_interact_marg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = body_mass_g ~ bill_length_mm/sex + flipper_length_mm + \n    species, data = peng_sans_miss_tidy)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-733.40 -188.22  -11.83  187.92  868.75 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)            -491.606    569.987  -0.862 0.389052    \nbill_length_mm           17.813      7.520   2.369 0.018421 *  \nflipper_length_mm        17.354      2.969   5.845 1.23e-08 ***\nspeciesChinstrap       -305.537     82.800  -3.690 0.000263 ***\nspeciesGentoo           706.682     96.992   7.286 2.41e-12 ***\nbill_length_mm:sexmale   10.252      1.002  10.235  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 296 on 327 degrees of freedom\nMultiple R-squared:  0.8669,\tAdjusted R-squared:  0.8649 \nF-statistic: 426.1 on 5 and 327 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n\n\n\n\n\n## Tables with multiple models \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmodelsummary(list(peng_naive, peng_adjust, pengs_interact_marg),\n             stars = TRUE,\n             gof_omit = \".*\", ## omitting all goodness of fit for space\n             coef_map = c(\"bill_length_mm\" = \"Bill Lenth(mm)\",\n                          \"flipper_length_mm\" = \"Flipper Lenth(mm)\",\n                          \"bill_length_mm x sexmale\" = \"Bill Length(mm) x Male Penguin\"),\n             vcov = \"robust\",\n             note = \"Robust Standard errors in Parenthsis\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table style=\"NAborder-bottom: 0;border-bottom: 0; width: auto !important; margin-left: auto; margin-right: auto;\" class=\"table\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:center;\"> Model 1 </th>\n   <th style=\"text-align:center;\"> Model 2 </th>\n   <th style=\"text-align:center;\"> Model 3 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Bill Lenth(mm) </td>\n   <td style=\"text-align:center;\"> 87.415*** </td>\n   <td style=\"text-align:center;\"> 60.117*** </td>\n   <td style=\"text-align:center;\"> 17.813* </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\"> (6.898) </td>\n   <td style=\"text-align:center;\"> (6.519) </td>\n   <td style=\"text-align:center;\"> (6.970) </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Flipper Lenth(mm) </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> 27.544*** </td>\n   <td style=\"text-align:center;\"> 17.354*** </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:center;\">  </td>\n   <td style=\"text-align:center;\"> (3.095) </td>\n   <td style=\"text-align:center;\"> (2.902) </td>\n  </tr>\n</tbody>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> + p &lt; 0.1, * p &lt; 0.05, ** p &lt; 0.01, *** p &lt; 0.001</td></tr></tfoot>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<sup></sup> Robust Standard errors in Parenthsis</td></tr></tfoot>\n</table>\n\n`````\n:::\n:::\n\n\n\n\n\n\n\n\n\n## Fixed Effects\n\n::::{.columns}\n:::{.column width=\"45%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(microbenchmark)\ntrade  = fixest::trade\nmicrobenchmark(\neuros_fe = feols(Euros ~ log(dist_km) | Origin + Destination + Product + Year, data = trade), times = 5)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> expr </th>\n   <th style=\"text-align:right;\"> time </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 30315277 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 17596462 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 17235211 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 17259893 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 16921930 </td>\n  </tr>\n</tbody>\n</table>\n\n</div>\n:::\n:::\n\n:::\n\n:::{.column width=\"45%\"}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmicrobenchmark(\neuro_stand = lm(Euros ~ log(dist_km) + factor(Origin) + factor(Destination) + factor(Product) + factor(Year), data = trade), times = 5)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> expr </th>\n   <th style=\"text-align:right;\"> time </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> euro_stand </td>\n   <td style=\"text-align:right;\"> 132751686 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euro_stand </td>\n   <td style=\"text-align:right;\"> 137357831 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euro_stand </td>\n   <td style=\"text-align:right;\"> 133944171 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euro_stand </td>\n   <td style=\"text-align:right;\"> 263617044 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euro_stand </td>\n   <td style=\"text-align:right;\"> 133070584 </td>\n  </tr>\n</tbody>\n</table>\n\n</div>\n:::\n:::\n\n\n:::\n::::\n\n:::{.notes}\nThere are more than a few ways to get a fixed effects regression in R my prefered way is using fixest. Because a species and island fixed effect would be a bit ridicoulous we can use star wars to demonstrate our point a bit\n\nTo sort of get on with the rest of the workshop I will not spend to much time on this. \n\n::::\n\n\n\n## Fixed Effects\n\n::::{.columns}\n:::{.column width=\"45%\"}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmicrobenchmark(\neuros_fe = feols(Euros ~ log(dist_km) | Origin + Destination + Product + Year, data = trade), times = 5)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> expr </th>\n   <th style=\"text-align:right;\"> time </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 16796060 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 16592577 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 16745589 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 16527428 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_fe </td>\n   <td style=\"text-align:right;\"> 16878511 </td>\n  </tr>\n</tbody>\n</table>\n\n</div>\n:::\n:::\n\n\n:::\n\n\n\n:::{.column width=\"45%\"}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(plm) \n## fixed effects option is model = \"within\"\nmicrobenchmark(\n euros_lfe = plm(Euros ~ log(dist_km) +  Origin + Destination + Product + Year\n                 , data = trade,\n                 model = \"within\"),\n                  times = 5)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> expr </th>\n   <th style=\"text-align:right;\"> time </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> euros_lfe </td>\n   <td style=\"text-align:right;\"> 122020674 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_lfe </td>\n   <td style=\"text-align:right;\"> 111674775 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_lfe </td>\n   <td style=\"text-align:right;\"> 247032749 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_lfe </td>\n   <td style=\"text-align:right;\"> 106565027 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> euros_lfe </td>\n   <td style=\"text-align:right;\"> 254226814 </td>\n  </tr>\n</tbody>\n</table>\n\n</div>\n:::\n:::\n\n\n:::\n::::\n\n\n:::{.notes}\nPLM has lots of other useful models like if you want a random effects model than you can use plm but in terms of fixed effects it is still slower \n\n:::\n\n## Generating Predictions \n\n:::columns \n:::column\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(1994)\n\npenguins = mutate(penguins, id = row_number())\n\npeng_train = penguins |> \n  drop_na() |> \n  sample_frac(0.7)\n\npeng_train$data_set = \"Train\"\n\n\npenguins_training_model = lm(body_mass_g ~ bill_length_mm, data = peng_train)\n\npeng_predict_train = augment(penguins_training_model,\n                           interval = \"prediction\",\n                           newdata = peng_train) |> \n  select(contains(\".\"), everything())\n```\n:::\n\n:::\n\n:::column\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npeng_test = anti_join(penguins, peng_train, by = \"id\")\n\npeng_test$data_set = \"Test\"\n\npenguins_test_model = lm(body_mass_g ~ bill_length_mm , data = peng_test)\n\n\npeng_predict_test = augment(penguins_test_model,\n                           interval = \"prediction\",\n                           newdata = peng_test) |> \n  select(contains(\".\"), everything())\n```\n:::\n\n\n:::\n:::\n\n\n## \n\n:::columns\n:::column\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nall_together = rbind(peng_predict_train, peng_predict_test)\n\nggplot(all_together, aes(x = bill_length_mm,\n                         y = body_mass_g,\n                         color = data_set,\n                         fill = data_set)) +\n  geom_point(alpha = 0.7) +\n  geom_line(aes(y = .fitted)) +\n  geom_ribbon(aes(ymin = .lower,\n                  ymax = .upper),\n              alpha = 0.3,\n              col = NA) +\n  scale_color_discrete(name = \"Training sample?\",\n                       aesthetics = c(\"color\", \"fill\")) +\n  theme_allen_bw()\n```\n:::\n\n:::\n\n:::column\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/unnamed-chunk-52-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n\n\n## ~~Maximum Likelihood Estimation~~ <br> Machine Learning </br>\n\n- R comes with a whole host of maximum likelihood estimators(MLE)\n  - As well as user written packages \n  \n- You will also probably want to load `marginaleffects` to get marginal effects of your model\n\n- `emmeans` is also a solid package for getting marginal effects\n\n- Note: They do differ on what they can do and how they generate marginal effects\n  - Andrew Heiss has a nice summary of this [at the bottom of this blog post](https://www.andrewheiss.com/blog/2022/05/20/marginalia/##tldr-overall-summary-of-all-these-marginal-effects-approaches)\n\n\n\n\n\n## The data we are using \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins_glm = penguins |> \n  drop_na() |> \n  mutate(big_penguin = ifelse(body_mass_g > median(body_mass_g), 1,0),\n         big_penguin_logic = ifelse(body_mass_g > median(body_mass_g), TRUE, FALSE),\n         female = ifelse(sex == \"female\", TRUE, FALSE))\n```\n:::\n\n\n\n\n\n\n\n\n## Lets See What this looks like \n\n:::columns\n:::column\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins_glm, aes(x = bill_length_mm,\n                         y = big_penguin)) +\n  geom_point() +\n  geom_smooth(method = \"glm\",\n              method.args = list(family = binomial(link = \"logit\"))) +\n  theme_allen_bw()\n```\n:::\n\n\n:::\n\n\n:::column\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/unnamed-chunk-55-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n\n\n\n## Our Model \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbase_model = glm(big_penguin ~ bill_length_mm + flipper_length_mm + species + female,\n                 data = penguins_glm,\n                 family = binomial(link = \"logit\"))\n\nsummary(base_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = big_penguin ~ bill_length_mm + flipper_length_mm + \n    species + female, family = binomial(link = \"logit\"), data = penguins_glm)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.5554  -0.1754  -0.0458   0.1525   3.3236  \n\nCoefficients:\n                   Estimate Std. Error z value Pr(>|z|)    \n(Intercept)       -28.21658    7.65713  -3.685 0.000229 ***\nbill_length_mm      0.16149    0.10149   1.591 0.111593    \nflipper_length_mm   0.11095    0.03734   2.971 0.002966 ** \nspeciesChinstrap   -3.06047    1.16962  -2.617 0.008880 ** \nspeciesGentoo       4.77533    1.71546   2.784 0.005374 ** \nfemaleTRUE         -3.30482    1.07008  -3.088 0.002013 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 461.27  on 332  degrees of freedom\nResidual deviance: 147.40  on 327  degrees of freedom\nAIC: 159.4\n\nNumber of Fisher Scoring iterations: 8\n```\n:::\n:::\n\n\n\n\n\n\n\n\n## Average Marginal Effects\n:::: {.columns}\n\n::: {.column width=\"35%\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\navg_marginal_effect = base_model |> \n  marginaleffects()  |> \n  tidy()\n\nggplot(data = filter(avg_marginal_effect, !term == \"species\"),\n       aes(x = estimate,\n           y = term)) +\n  geom_pointrange(aes(xmin = conf.low,\n                      xmax = conf.high)) +\n  geom_vline(xintercept = 0) +\n  theme_allen_minimal()\n```\n:::\n\n:::\n\n::: {.column width=\"65\"}\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/unnamed-chunk-58-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n:::\n::::\n\n\n\n## User Specified Values\n\n:::columns\n:::column\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npredictions_emmeans = base_model |> \n emmeans(~ bill_length_mm + species, var = \"bill_length_mm\",\n                   at = list(bill_length_mm = seq(0, 60,1)),\n                   regrid = \"response\") |> \n  as_tibble()\ncolors_plot = c(\"##f0be3d\", \"##931e18\", \"##247d3f\")\n\nggplot(predictions_emmeans, aes(x = bill_length_mm, y = prob, color = species)) +\n  geom_line() + \n  labs(x = \"Bill Length(millimeters)\", y = \"Predicted Probablity of Being a Big Penguin\",\n       color = NULL) +\n  theme(legend.position = \"bottom\") +\n  theme_allen_minimal() +\n  scale_color_manual(values = colors_plot)\n```\n:::\n\n:::\n\n:::column\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\np  = plot_cap(base_model, condition = c(\"bill_length_mm\", \"species\"), conf_level = 0.01) ## can be saved and changed with ggplot options \n\np + \n  labs(x = \"Bill Length(millimeters)\", y = \"Predicted Probablity of Being a Big Penguin\",\n       color = NULL, fill = NULL,\n       caption = \"By Default plot_cap plots confidence intervals \\nso you have you make them really small\") +\n  theme(legend.position = \"bottom\") +\n  theme_allen_minimal() +\n  scale_color_manual(values = colors_plot)\n```\n:::\n\n:::\n:::\n\n\n\n\n\n## Results\n\n::::{.columns}\n:::{.column width=\"45%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/unnamed-chunk-61-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n\n:::{.column width=\"45%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](figs/unnamed-chunk-62-1.png){fig-align='center' width=100%}\n:::\n:::\n\n:::\n::::\n\n\n\n\n\n\n\n##  Machine Learning\n\n\n## Packages You Will Need \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidymodels)\nlibrary(caret)\nlibrary(MASS)\nlibrary(mlbench)\nlibrary(e1071)\nlibrary(parallel) # Allows for parallel processing \nlibrary(doParallel) # extremely useful for models that take a longtime\n```\n:::\n\n\n\n\n- Note caret and tidymodels have some namespace conflicts. \n    - I personally would prefer to load one or the other \n    - This is just a commitment to show you how to do things two ways\n\n## Creating Training and Test Sets \n\n\n:::columns \n:::column \n### Caret \n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Preprocess data  \npeng =  penguins |> drop_na()\n\npeng_caret = as.data.frame(peng)  \n\n\ntrain_index_caret = caret::createDataPartition(peng_caret$species, p = 0.7, list = FALSE, times = 1)\n\ntrain_caret = peng_caret[train_index_caret,]\n\ntest_caret = peng_caret[-train_index_caret,]\n```\n:::\n\n\n\n:::\n\n\n:::column\n\n### Tidymodels \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npeng_models =  rsample::initial_split(peng, prop = 0.7)\n\npeng_tidy_train = rsample::training(peng_models)\n\npeng_tidy_test = rsample::testing(peng_models)\n```\n:::\n\n\n:::\n:::\n\n\n\n## Create Bootstraps \n\n\n:::columns\n:::column \n\n### Caret \n\n- I just choose mean. Do what makes sense for your goals \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(boot)\n\npeng_caret_boots = trainControl(method = \"boot\", number = 25, classProbs = TRUE)\n```\n:::\n\n\n\n:::\n:::column \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npeng_boots = bootstraps(peng_tidy_train)\n```\n:::\n\n\n:::\n:::\n\n\n##  Fit a Random Forest and Plot ROC \n\n\n:::columns \n:::column \n###  Caret \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(pROC)\nrf_caret = train(sex ~ .,\n                 data = train_caret,\n                 method = \"ranger\",\n                 trControl = peng_caret_boots,\n                 metric = \"ROC\",\n                 verbose = FALSE)\n\n# confusionMatrix(predict(rf_caret, train)) this is how you extract predictions with caret\n\n\n\n# confusionMatrix(predict(rf_caret, train)) \n\n\n# roc(test$species, )\n```\n:::\n\n\n:::\n\n::: column\n\n### Tidymodels \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nrf_spec = rand_forest() |> \n  set_mode(\"classification\") |> \n  set_engine(\"ranger\")\n\npenguin_wf = workflow() |> \n  add_formula(sex ~ .)\n\n\nrf_peng = penguin_wf |> \n  add_model(rf_spec) |> \n  fit_resamples(resample = peng_boots,\n                control = control_resamples(save_pred = TRUE))\n\n\n\n\nrf_peng |> \n  collect_predictions()  |> \n  group_by(id) |> \n  roc_curve(sex, .pred_female) |> \n  ggplot(aes(1 - specificity, sensitivity, color = id)) +\n  geom_abline(lty = 2, color = \"gray80\", size = 1.5) +\n  geom_path(show.legend = FALSE, alpha = 0.6, size = 1.2) +\n  coord_equal()\n```\n\n::: {.cell-output-display}\n![](figs/unnamed-chunk-69-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}